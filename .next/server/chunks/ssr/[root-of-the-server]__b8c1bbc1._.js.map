{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/omid/vulu-ai/src/hooks/useVoiceAndMedia.ts"],"sourcesContent":["'use client'\n\nimport { useState, useRef, useCallback, useEffect } from 'react'\n\ninterface UseVoiceAndMediaReturn {\n  // Speech Recognition\n  isListening: boolean\n  transcript: string\n  startListening: () => void\n  stopListening: () => void\n  \n  // Text to Speech\n  speak: (text: string) => void\n  isSpeaking: boolean\n  stopSpeaking: () => void\n  \n  // Camera\n  videoRef: React.RefObject<HTMLVideoElement | null>\n  isCameraActive: boolean\n  startCamera: () => Promise<void>\n  stopCamera: () => void\n  capturePhoto: () => string | null\n  \n  // Screen Sharing\n  isScreenSharing: boolean\n  startScreenShare: () => Promise<void>\n  stopScreenShare: () => void\n  captureScreen: () => string | null\n  \n  // Error handling\n  error: string | null\n  clearError: () => void\n}\n\nexport function useVoiceAndMedia(): UseVoiceAndMediaReturn {\n  // Speech Recognition State\n  const [isListening, setIsListening] = useState(false)\n  const [transcript, setTranscript] = useState('')\n  const recognitionRef = useRef<SpeechRecognition | null>(null)\n  \n  // Text to Speech State\n  const [isSpeaking, setIsSpeaking] = useState(false)\n  const synthRef = useRef<SpeechSynthesis | null>(null)\n  \n  // Media State\n  const videoRef = useRef<HTMLVideoElement>(null)\n  const [isCameraActive, setIsCameraActive] = useState(false)\n  const [isScreenSharing, setIsScreenSharing] = useState(false)\n  const streamRef = useRef<MediaStream | null>(null)\n  \n  // Error State\n  const [error, setError] = useState<string | null>(null)\n\n  // Initialize Speech Recognition\n  useEffect(() => {\n    if (typeof window !== 'undefined' && 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = (window as any).webkitSpeechRecognition || (window as any).SpeechRecognition\n      recognitionRef.current = new SpeechRecognition()\n      \n      const recognition = recognitionRef.current\n      if (recognition) {\n        recognition.continuous = true\n        recognition.interimResults = true\n        recognition.lang = 'en-US'\n        \n        recognition.onresult = (event: SpeechRecognitionEvent) => {\n          let finalTranscript = ''\n          for (let i = event.resultIndex; i < event.results.length; i++) {\n            if (event.results[i].isFinal) {\n              finalTranscript += event.results[i][0].transcript\n            }\n          }\n          if (finalTranscript) {\n            setTranscript(finalTranscript)\n          }\n        }\n        \n        recognition.onerror = (event: SpeechRecognitionErrorEvent) => {\n          setError(`Speech recognition error: ${event.error}`)\n          setIsListening(false)\n        }\n        \n        recognition.onend = () => {\n          setIsListening(false)\n        }\n      }\n    }\n\n    // Initialize Speech Synthesis\n    if (typeof window !== 'undefined' && 'speechSynthesis' in window) {\n      synthRef.current = window.speechSynthesis\n    }\n  }, [])\n\n  // Speech Recognition Functions\n  const startListening = useCallback(() => {\n    if (recognitionRef.current && !isListening) {\n      setTranscript('')\n      setError(null)\n      try {\n        recognitionRef.current.start()\n        setIsListening(true)\n      } catch (err) {\n        setError('Could not start speech recognition')\n      }\n    }\n  }, [isListening])\n\n  const stopListening = useCallback(() => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop()\n      setIsListening(false)\n    }\n  }, [isListening])\n\n  // Text to Speech Functions\n  const speak = useCallback((text: string) => {\n    if (synthRef.current) {\n      // Stop any ongoing speech\n      synthRef.current.cancel()\n      \n      const utterance = new SpeechSynthesisUtterance(text)\n      utterance.rate = 0.9\n      utterance.pitch = 1\n      utterance.volume = 0.8\n      \n      // Try to find a good voice (prefer neural/enhanced voices)\n      const voices = synthRef.current.getVoices()\n      const preferredVoice = voices.find(voice => \n        voice.name.includes('Neural') || \n        voice.name.includes('Enhanced') ||\n        voice.name.includes('Google')\n      ) || voices.find(voice => voice.lang.startsWith('en'))\n      \n      if (preferredVoice) {\n        utterance.voice = preferredVoice\n      }\n      \n      utterance.onstart = () => setIsSpeaking(true)\n      utterance.onend = () => setIsSpeaking(false)\n      utterance.onerror = () => {\n        setIsSpeaking(false)\n        setError('Text-to-speech error')\n      }\n      \n      synthRef.current.speak(utterance)\n    }\n  }, [])\n\n  const stopSpeaking = useCallback(() => {\n    if (synthRef.current) {\n      synthRef.current.cancel()\n      setIsSpeaking(false)\n    }\n  }, [])\n\n  // Camera Functions\n  const startCamera = useCallback(async () => {\n    try {\n      setError(null)\n      const stream = await navigator.mediaDevices.getUserMedia({ \n        video: { width: 1280, height: 720 }, \n        audio: false \n      })\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream\n        streamRef.current = stream\n        setIsCameraActive(true)\n      }\n    } catch (err) {\n      setError('Could not access camera')\n    }\n  }, [])\n\n  const stopCamera = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop())\n      streamRef.current = null\n      setIsCameraActive(false)\n      if (videoRef.current) {\n        videoRef.current.srcObject = null\n      }\n    }\n  }, [])\n\n  const capturePhoto = useCallback((): string | null => {\n    if (videoRef.current && isCameraActive) {\n      const canvas = document.createElement('canvas')\n      const video = videoRef.current\n      canvas.width = video.videoWidth\n      canvas.height = video.videoHeight\n      \n      const ctx = canvas.getContext('2d')\n      if (ctx) {\n        ctx.drawImage(video, 0, 0)\n        return canvas.toDataURL('image/jpeg', 0.8)\n      }\n    }\n    return null\n  }, [isCameraActive])\n\n  // Screen Sharing Functions\n  const startScreenShare = useCallback(async () => {\n    try {\n      setError(null)\n      const stream = await navigator.mediaDevices.getDisplayMedia({ \n        video: true, \n        audio: false \n      })\n      \n      if (videoRef.current) {\n        videoRef.current.srcObject = stream\n        streamRef.current = stream\n        setIsScreenSharing(true)\n        \n        // Handle screen share end\n        stream.getVideoTracks()[0].onended = () => {\n          stopScreenShare()\n        }\n      }\n    } catch (err) {\n      setError('Could not start screen sharing')\n    }\n  }, [])\n\n  const stopScreenShare = useCallback(() => {\n    if (streamRef.current) {\n      streamRef.current.getTracks().forEach(track => track.stop())\n      streamRef.current = null\n      setIsScreenSharing(false)\n      if (videoRef.current) {\n        videoRef.current.srcObject = null\n      }\n    }\n  }, [])\n\n  const captureScreen = useCallback((): string | null => {\n    if (videoRef.current && isScreenSharing) {\n      const canvas = document.createElement('canvas')\n      const video = videoRef.current\n      canvas.width = video.videoWidth\n      canvas.height = video.videoHeight\n      \n      const ctx = canvas.getContext('2d')\n      if (ctx) {\n        ctx.drawImage(video, 0, 0)\n        return canvas.toDataURL('image/jpeg', 0.8)\n      }\n    }\n    return null\n  }, [isScreenSharing])\n\n  const clearError = useCallback(() => {\n    setError(null)\n  }, [])\n\n  return {\n    // Speech Recognition\n    isListening,\n    transcript,\n    startListening,\n    stopListening,\n    \n    // Text to Speech\n    speak,\n    isSpeaking,\n    stopSpeaking,\n    \n    // Camera\n    videoRef,\n    isCameraActive,\n    startCamera,\n    stopCamera,\n    capturePhoto,\n    \n    // Screen Sharing\n    isScreenSharing,\n    startScreenShare,\n    stopScreenShare,\n    captureScreen,\n    \n    // Error handling\n    error,\n    clearError\n  }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///Users/omid/vulu-ai/src/app/chat/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef, useEffect } from 'react'\nimport Link from 'next/link'\nimport { \n  MicrophoneIcon, \n  PaperAirplaneIcon, \n  StopIcon,\n  CameraIcon,\n  PhotoIcon,\n  HomeIcon,\n  ComputerDesktopIcon,\n  SpeakerWaveIcon,\n  SpeakerXMarkIcon,\n  ExclamationTriangleIcon\n} from '@heroicons/react/24/outline'\nimport { useVoiceAndMedia } from '@/hooks/useVoiceAndMedia'\n\ninterface Message {\n  id: string\n  content: string\n  role: 'user' | 'assistant'\n  timestamp: Date\n}\n\nexport default function ChatPage() {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      content: \"Hello! I'm JARVIS, your personal AI assistant. How can I help you today?\",\n      role: 'assistant',\n      timestamp: new Date()\n    }\n  ])\n  const [input, setInput] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [showVideo, setShowVideo] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n  \n  // Voice and Media capabilities\n  const {\n    isListening,\n    transcript,\n    startListening,\n    stopListening,\n    speak,\n    isSpeaking,\n    stopSpeaking,\n    videoRef,\n    isCameraActive,\n    startCamera,\n    stopCamera,\n    capturePhoto,\n    isScreenSharing,\n    startScreenShare,\n    stopScreenShare,\n    captureScreen,\n    error: mediaError,\n    clearError\n  } = useVoiceAndMedia()\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  const handleSendMessage = async (messageText?: string) => {\n    const textToSend = messageText || input.trim()\n    if (!textToSend || isLoading) return\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: textToSend,\n      role: 'user',\n      timestamp: new Date()\n    }\n\n    setMessages(prev => [...prev, userMessage])\n    setInput('')\n    setIsLoading(true)\n\n    try {\n      // Send to AI API\n      const response = await fetch('/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({\n          message: textToSend,\n          conversationHistory: messages.slice(-10) // Send last 10 messages for context\n        })\n      })\n\n      const data = await response.json()\n\n      if (data.error) {\n        throw new Error(data.error)\n      }\n\n      const assistantMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: data.response,\n        role: 'assistant',\n        timestamp: new Date()\n      }\n      \n      setMessages(prev => [...prev, assistantMessage])\n      \n      // Speak the response\n      speak(data.response)\n      \n    } catch (error) {\n      const errorMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"I apologize, but I'm experiencing technical difficulties. Please check your API configuration.\",\n        role: 'assistant',\n        timestamp: new Date()\n      }\n      setMessages(prev => [...prev, errorMessage])\n    }\n    \n    setIsLoading(false)\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  // Handle voice input\n  useEffect(() => {\n    if (transcript) {\n      setInput(transcript)\n      // Auto-send if transcript ends with clear intent\n      if (transcript.toLowerCase().includes('send') || transcript.toLowerCase().includes('go')) {\n        handleSendMessage(transcript)\n      }\n    }\n  }, [transcript])\n\n  const handleImageCapture = async (imageData: string, source: 'camera' | 'screen') => {\n    setIsLoading(true)\n    try {\n      const response = await fetch(imageData)\n      const blob = await response.blob()\n      \n      const formData = new FormData()\n      formData.append('image', blob, `${source}-capture.jpg`)\n      formData.append('prompt', `Analyze this ${source} capture and describe what you see in detail.`)\n\n      const visionResponse = await fetch('/api/vision', {\n        method: 'POST',\n        body: formData\n      })\n\n      const data = await visionResponse.json()\n\n      if (data.error) {\n        throw new Error(data.error)\n      }\n\n      const visionMessage: Message = {\n        id: Date.now().toString(),\n        content: `📸 ${source.charAt(0).toUpperCase() + source.slice(1)} Analysis: ${data.analysis}`,\n        role: 'assistant',\n        timestamp: new Date()\n      }\n      \n      setMessages(prev => [...prev, visionMessage])\n      speak(data.analysis)\n      \n    } catch (error) {\n      const errorMessage: Message = {\n        id: Date.now().toString(),\n        content: `Sorry, I couldn't analyze the ${source} capture. Please try again.`,\n        role: 'assistant',\n        timestamp: new Date()\n      }\n      setMessages(prev => [...prev, errorMessage])\n    }\n    setIsLoading(false)\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\n      {/* Header */}\n      <header className=\"bg-black/20 backdrop-blur-sm border-b border-white/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/\" className=\"text-white hover:text-blue-300 transition-colors\">\n                <HomeIcon className=\"w-6 h-6\" />\n              </Link>\n              <div className=\"text-xl font-bold text-white\">\n                🤖 <span className=\"bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent\">J.A.R.V.I.S</span>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\n              <span className=\"text-green-400 text-sm font-medium\">Online</span>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Chat Container */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Error Display */}\n        {mediaError && (\n          <div className=\"mb-4 bg-red-500/20 border border-red-500/50 rounded-lg p-4 flex items-center space-x-3\">\n            <ExclamationTriangleIcon className=\"w-5 h-5 text-red-400 flex-shrink-0\" />\n            <span className=\"text-red-300\">{mediaError}</span>\n            <button \n              onClick={clearError}\n              className=\"ml-auto text-red-400 hover:text-red-300\"\n            >\n              ✕\n            </button>\n          </div>\n        )}\n\n        {/* Video Display */}\n        {showVideo && (isCameraActive || isScreenSharing) && (\n          <div className=\"mb-4 bg-white/5 backdrop-blur-lg rounded-xl border border-white/10 p-4\">\n            <div className=\"flex items-center justify-between mb-3\">\n              <h3 className=\"text-white font-medium\">\n                {isCameraActive ? '📷 Camera Feed' : '🖥️ Screen Share'}\n              </h3>\n              <button \n                onClick={() => setShowVideo(false)}\n                className=\"text-gray-400 hover:text-white\"\n              >\n                ✕\n              </button>\n            </div>\n            <video \n              ref={videoRef}\n              autoPlay \n              muted \n              className=\"w-full max-w-md mx-auto rounded-lg bg-black\"\n            />\n          </div>\n        )}\n\n        <div className=\"bg-white/5 backdrop-blur-lg rounded-2xl border border-white/10 h-[calc(100vh-200px)] flex flex-col\">\n          \n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`max-w-[80%] rounded-2xl px-6 py-4 ${\n                    message.role === 'user'\n                      ? 'bg-gradient-to-r from-blue-600 to-cyan-600 text-white'\n                      : 'bg-white/10 text-white border border-white/20'\n                  }`}\n                >\n                  <p className=\"text-sm md:text-base leading-relaxed\">{message.content}</p>\n                  <p className=\"text-xs opacity-70 mt-2\">\n                    {message.timestamp.toLocaleTimeString()}\n                  </p>\n                </div>\n              </div>\n            ))}\n            \n            {isLoading && (\n              <div className=\"flex justify-start\">\n                <div className=\"bg-white/10 text-white border border-white/20 rounded-2xl px-6 py-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"></div>\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-100\"></div>\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-200\"></div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input Area */}\n          <div className=\"border-t border-white/10 p-6\">\n            <div className=\"flex items-end space-x-4\">\n              {/* Media Controls */}\n              <div className=\"flex space-x-2\">\n                <button \n                  onClick={() => setShowVideo(!showVideo)}\n                  className=\"p-2 text-gray-400 hover:text-white hover:bg-white/10 rounded-lg transition-colors\"\n                >\n                  <PhotoIcon className=\"w-5 h-5\" />\n                </button>\n                <button \n                  onClick={isCameraActive ? stopCamera : startCamera}\n                  className={`p-2 rounded-lg transition-colors ${\n                    isCameraActive \n                      ? 'text-green-400 bg-green-400/10' \n                      : 'text-gray-400 hover:text-white hover:bg-white/10'\n                  }`}\n                >\n                  <CameraIcon className=\"w-5 h-5\" />\n                </button>\n                <button \n                  onClick={isScreenSharing ? stopScreenShare : startScreenShare}\n                  className={`p-2 rounded-lg transition-colors ${\n                    isScreenSharing \n                      ? 'text-blue-400 bg-blue-400/10' \n                      : 'text-gray-400 hover:text-white hover:bg-white/10'\n                  }`}\n                >\n                  <ComputerDesktopIcon className=\"w-5 h-5\" />\n                </button>\n                {(isCameraActive || isScreenSharing) && (\n                  <button \n                    onClick={() => {\n                      const imageData = isCameraActive ? capturePhoto() : captureScreen()\n                      if (imageData) {\n                        handleImageCapture(imageData, isCameraActive ? 'camera' : 'screen')\n                      }\n                    }}\n                    className=\"p-2 text-yellow-400 hover:text-yellow-300 hover:bg-yellow-400/10 rounded-lg transition-colors\"\n                  >\n                    📸\n                  </button>\n                )}\n                {isSpeaking && (\n                  <button \n                    onClick={stopSpeaking}\n                    className=\"p-2 text-red-400 hover:text-red-300 hover:bg-red-400/10 rounded-lg transition-colors\"\n                  >\n                    <SpeakerXMarkIcon className=\"w-5 h-5\" />\n                  </button>\n                )}\n              </div>\n\n              {/* Message input */}\n              <div className=\"flex-1 relative\">\n                <textarea\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Talk to JARVIS...\"\n                  className=\"w-full bg-white/10 border border-white/20 rounded-2xl px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none min-h-[48px] max-h-32\"\n                  rows={1}\n                />\n              </div>\n\n              {/* Voice button */}\n              <button\n                onClick={isListening ? stopListening : startListening}\n                className={`p-3 rounded-full transition-all duration-200 ${\n                  isListening\n                    ? 'bg-red-500 hover:bg-red-600 text-white animate-pulse'\n                    : 'bg-white/10 hover:bg-white/20 text-gray-400 hover:text-white'\n                }`}\n              >\n                {isListening ? (\n                  <StopIcon className=\"w-5 h-5\" />\n                ) : (\n                  <MicrophoneIcon className=\"w-5 h-5\" />\n                )}\n              </button>\n\n              {/* Send button */}\n              <button\n                onClick={() => handleSendMessage()}\n                disabled={!input.trim() || isLoading}\n                className=\"p-3 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-500 hover:to-cyan-500 disabled:from-gray-600 disabled:to-gray-600 disabled:cursor-not-allowed text-white rounded-full transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                <PaperAirplaneIcon className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            {/* Status indicators */}\n            <div className=\"flex items-center justify-between mt-4 text-xs text-gray-400\">\n              <div className=\"flex items-center space-x-4\">\n                <span>Press Enter to send, Shift+Enter for new line</span>\n                {isListening && (\n                  <span className=\"text-red-400 animate-pulse\">🎤 Listening...</span>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                <span>JARVIS is ready</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}