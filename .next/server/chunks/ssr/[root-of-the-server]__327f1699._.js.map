{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///Users/omid/vulu-ai/src/app/chat/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useRef, useEffect } from 'react'\nimport Link from 'next/link'\nimport { \n  MicrophoneIcon, \n  PaperAirplaneIcon, \n  StopIcon,\n  CameraIcon,\n  PhotoIcon,\n  HomeIcon,\n  ComputerDesktopIcon,\n  SpeakerWaveIcon,\n  SpeakerXMarkIcon,\n  ExclamationTriangleIcon\n} from '@heroicons/react/24/outline'\nimport { useVoiceAndMedia } from '@/hooks/useVoiceAndMedia'\n\ninterface Message {\n  id: string\n  content: string\n  role: 'user' | 'assistant'\n  timestamp: Date\n}\n\nexport default function ChatPage() {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      content: \"Hello! I'm JARVIS, your personal AI assistant. How can I help you today?\",\n      role: 'assistant',\n      timestamp: new Date()\n    }\n  ])\n  const [input, setInput] = useState('')\n  const [isListening, setIsListening] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const messagesEndRef = useRef<HTMLDivElement>(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' })\n  }\n\n  useEffect(() => {\n    scrollToBottom()\n  }, [messages])\n\n  const handleSendMessage = async () => {\n    if (!input.trim() || isLoading) return\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      content: input,\n      role: 'user',\n      timestamp: new Date()\n    }\n\n    setMessages(prev => [...prev, userMessage])\n    setInput('')\n    setIsLoading(true)\n\n    // Simulate AI response (replace with actual AI integration later)\n    setTimeout(() => {\n      const assistantMessage: Message = {\n        id: (Date.now() + 1).toString(),\n        content: \"I understand you said: \\\"\" + userMessage.content + \"\\\". This is a placeholder response. Soon I'll be connected to real AI capabilities!\",\n        role: 'assistant',\n        timestamp: new Date()\n      }\n      setMessages(prev => [...prev, assistantMessage])\n      setIsLoading(false)\n    }, 1000)\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault()\n      handleSendMessage()\n    }\n  }\n\n  const toggleListening = () => {\n    setIsListening(!isListening)\n    // Voice recognition will be implemented here\n    if (!isListening) {\n      // Start listening\n      console.log('Starting voice recognition...')\n    } else {\n      // Stop listening\n      console.log('Stopping voice recognition...')\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900\">\n      {/* Header */}\n      <header className=\"bg-black/20 backdrop-blur-sm border-b border-white/10\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/\" className=\"text-white hover:text-blue-300 transition-colors\">\n                <HomeIcon className=\"w-6 h-6\" />\n              </Link>\n              <div className=\"text-xl font-bold text-white\">\n                ðŸ¤– <span className=\"bg-gradient-to-r from-blue-400 to-cyan-400 bg-clip-text text-transparent\">J.A.R.V.I.S</span>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <div className=\"w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\n              <span className=\"text-green-400 text-sm font-medium\">Online</span>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Chat Container */}\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"bg-white/5 backdrop-blur-lg rounded-2xl border border-white/10 h-[calc(100vh-200px)] flex flex-col\">\n          \n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`max-w-[80%] rounded-2xl px-6 py-4 ${\n                    message.role === 'user'\n                      ? 'bg-gradient-to-r from-blue-600 to-cyan-600 text-white'\n                      : 'bg-white/10 text-white border border-white/20'\n                  }`}\n                >\n                  <p className=\"text-sm md:text-base leading-relaxed\">{message.content}</p>\n                  <p className=\"text-xs opacity-70 mt-2\">\n                    {message.timestamp.toLocaleTimeString()}\n                  </p>\n                </div>\n              </div>\n            ))}\n            \n            {isLoading && (\n              <div className=\"flex justify-start\">\n                <div className=\"bg-white/10 text-white border border-white/20 rounded-2xl px-6 py-4\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce\"></div>\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-100\"></div>\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full animate-bounce delay-200\"></div>\n                  </div>\n                </div>\n              </div>\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input Area */}\n          <div className=\"border-t border-white/10 p-6\">\n            <div className=\"flex items-end space-x-4\">\n              {/* Attachment buttons */}\n              <div className=\"flex space-x-2\">\n                <button className=\"p-2 text-gray-400 hover:text-white hover:bg-white/10 rounded-lg transition-colors\">\n                  <PhotoIcon className=\"w-5 h-5\" />\n                </button>\n                <button className=\"p-2 text-gray-400 hover:text-white hover:bg-white/10 rounded-lg transition-colors\">\n                  <CameraIcon className=\"w-5 h-5\" />\n                </button>\n              </div>\n\n              {/* Message input */}\n              <div className=\"flex-1 relative\">\n                <textarea\n                  value={input}\n                  onChange={(e) => setInput(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Talk to JARVIS...\"\n                  className=\"w-full bg-white/10 border border-white/20 rounded-2xl px-4 py-3 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none min-h-[48px] max-h-32\"\n                  rows={1}\n                />\n              </div>\n\n              {/* Voice button */}\n              <button\n                onClick={toggleListening}\n                className={`p-3 rounded-full transition-all duration-200 ${\n                  isListening\n                    ? 'bg-red-500 hover:bg-red-600 text-white animate-pulse'\n                    : 'bg-white/10 hover:bg-white/20 text-gray-400 hover:text-white'\n                }`}\n              >\n                {isListening ? (\n                  <StopIcon className=\"w-5 h-5\" />\n                ) : (\n                  <MicrophoneIcon className=\"w-5 h-5\" />\n                )}\n              </button>\n\n              {/* Send button */}\n              <button\n                onClick={handleSendMessage}\n                disabled={!input.trim() || isLoading}\n                className=\"p-3 bg-gradient-to-r from-blue-600 to-cyan-600 hover:from-blue-500 hover:to-cyan-500 disabled:from-gray-600 disabled:to-gray-600 disabled:cursor-not-allowed text-white rounded-full transition-all duration-200 shadow-lg hover:shadow-xl\"\n              >\n                <PaperAirplaneIcon className=\"w-5 h-5\" />\n              </button>\n            </div>\n\n            {/* Status indicators */}\n            <div className=\"flex items-center justify-between mt-4 text-xs text-gray-400\">\n              <div className=\"flex items-center space-x-4\">\n                <span>Press Enter to send, Shift+Enter for new line</span>\n                {isListening && (\n                  <span className=\"text-red-400 animate-pulse\">ðŸŽ¤ Listening...</span>\n                )}\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"w-2 h-2 bg-green-400 rounded-full\"></div>\n                <span>JARVIS is ready</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;;AAyBe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;QAClD;YACE,IAAI;YACJ,SAAS;YACT,MAAM;YACN,WAAW,IAAI;QACjB;KACD;IACD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE9C,MAAM,iBAAiB;QACrB,eAAe,OAAO,EAAE,eAAe;YAAE,UAAU;QAAS;IAC9D;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR;IACF,GAAG;QAAC;KAAS;IAEb,MAAM,oBAAoB;QACxB,IAAI,CAAC,MAAM,IAAI,MAAM,WAAW;QAEhC,MAAM,cAAuB;YAC3B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,SAAS;YACT,MAAM;YACN,WAAW,IAAI;QACjB;QAEA,YAAY,CAAA,OAAQ;mBAAI;gBAAM;aAAY;QAC1C,SAAS;QACT,aAAa;QAEb,kEAAkE;QAClE,WAAW;YACT,MAAM,mBAA4B;gBAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;gBAC7B,SAAS,8BAA8B,YAAY,OAAO,GAAG;gBAC7D,MAAM;gBACN,WAAW,IAAI;YACjB;YACA,YAAY,CAAA,OAAQ;uBAAI;oBAAM;iBAAiB;YAC/C,aAAa;QACf,GAAG;IACL;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,MAAM,kBAAkB;QACtB,eAAe,CAAC;QAChB,6CAA6C;QAC7C,IAAI,CAAC,aAAa;YAChB,kBAAkB;YAClB,QAAQ,GAAG,CAAC;QACd,OAAO;YACL,iBAAiB;YACjB,QAAQ,GAAG,CAAC;QACd;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAI,WAAU;;kDACb,8OAAC,4JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAI,WAAU;kDACvB,cAAA,8OAAC,+MAAA,CAAA,WAAQ;4CAAC,WAAU;;;;;;;;;;;kDAEtB,8OAAC;wCAAI,WAAU;;4CAA+B;0DACzC,8OAAC;gDAAK,WAAU;0DAA2E;;;;;;;;;;;;;;;;;;0CAGlG,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAI,WAAU;;;;;;kDACf,8OAAC;wCAAK,WAAU;kDAAqC;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAO7D,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCAGb,8OAAC;4BAAI,WAAU;;gCACZ,SAAS,GAAG,CAAC,CAAC,wBACb,8OAAC;wCAEC,WAAW,CAAC,KAAK,EAAE,QAAQ,IAAI,KAAK,SAAS,gBAAgB,iBAAiB;kDAE9E,cAAA,8OAAC;4CACC,WAAW,CAAC,kCAAkC,EAC5C,QAAQ,IAAI,KAAK,SACb,0DACA,iDACJ;;8DAEF,8OAAC;oDAAE,WAAU;8DAAwC,QAAQ,OAAO;;;;;;8DACpE,8OAAC;oDAAE,WAAU;8DACV,QAAQ,SAAS,CAAC,kBAAkB;;;;;;;;;;;;uCAZpC,QAAQ,EAAE;;;;;gCAkBlB,2BACC,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;;;;;8DACf,8OAAC;oDAAI,WAAU;;;;;;8DACf,8OAAC;oDAAI,WAAU;;;;;;;;;;;;;;;;;;;;;;8CAMvB,8OAAC;oCAAI,KAAK;;;;;;;;;;;;sCAIZ,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAI,WAAU;;sDAEb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAO,WAAU;8DAChB,cAAA,8OAAC,iNAAA,CAAA,YAAS;wDAAC,WAAU;;;;;;;;;;;8DAEvB,8OAAC;oDAAO,WAAU;8DAChB,cAAA,8OAAC,mNAAA,CAAA,aAAU;wDAAC,WAAU;;;;;;;;;;;;;;;;;sDAK1B,8OAAC;4CAAI,WAAU;sDACb,cAAA,8OAAC;gDACC,OAAO;gDACP,UAAU,CAAC,IAAM,SAAS,EAAE,MAAM,CAAC,KAAK;gDACxC,YAAY;gDACZ,aAAY;gDACZ,WAAU;gDACV,MAAM;;;;;;;;;;;sDAKV,8OAAC;4CACC,SAAS;4CACT,WAAW,CAAC,6CAA6C,EACvD,cACI,yDACA,gEACJ;sDAED,4BACC,8OAAC,+MAAA,CAAA,WAAQ;gDAAC,WAAU;;;;;qEAEpB,8OAAC,2NAAA,CAAA,iBAAc;gDAAC,WAAU;;;;;;;;;;;sDAK9B,8OAAC;4CACC,SAAS;4CACT,UAAU,CAAC,MAAM,IAAI,MAAM;4CAC3B,WAAU;sDAEV,cAAA,8OAAC,iOAAA,CAAA,oBAAiB;gDAAC,WAAU;;;;;;;;;;;;;;;;;8CAKjC,8OAAC;oCAAI,WAAU;;sDACb,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;8DAAK;;;;;;gDACL,6BACC,8OAAC;oDAAK,WAAU;8DAA6B;;;;;;;;;;;;sDAGjD,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;oDAAI,WAAU;;;;;;8DACf,8OAAC;8DAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQtB","debugId":null}}]
}